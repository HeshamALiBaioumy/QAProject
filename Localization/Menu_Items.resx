<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Menu_Check_lists" xml:space="preserve">
    <value>Check-lists</value>
  </data>
  <data name="Menu_Complaints" xml:space="preserve">
    <value>Complaints</value>
  </data>
  <data name="Menu_CRs" xml:space="preserve">
    <value>CR's</value>
  </data>
  <data name="Menu_CR_Types" xml:space="preserve">
    <value>CR Types</value>
  </data>
  <data name="Menu_Department" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="Menu_Factory" xml:space="preserve">
    <value>Factory</value>
  </data>
  <data name="Menu_Home" xml:space="preserve">
    <value> Home </value>
  </data>
  <data name="Menu_Mixer" xml:space="preserve">
    <value>Mixer</value>
  </data>
  <data name="Menu_Projects" xml:space="preserve">
    <value>Projects</value>
  </data>
  <data name="Menu_Project_Owner" xml:space="preserve">
    <value>Project Owner</value>
  </data>
  <data name="Menu_RCV" xml:space="preserve">
    <value>Random CR Verification</value>
  </data>
  <data name="Menu_Sample_Test" xml:space="preserve">
    <value>Sample Test</value>
  </data>
  <data name="Menu_Sub_CheckList_Flow" xml:space="preserve">
    <value>Check-List Flow</value>
  </data>
  <data name="Menu_Sub_Check_lists" xml:space="preserve">
    <value>Check-lists</value>
  </data>
  <data name="Menu_Sub_Check_list_Groups" xml:space="preserve">
    <value>Check-list Groups</value>
  </data>
  <data name="Menu_Sub_Check_list_Group_Items" xml:space="preserve">
    <value>Check-list Group Items</value>
  </data>
  <data name="Menu_Sub_CLWF_Sequence" xml:space="preserve">
    <value>Check-List Sequence</value>
  </data>
  <data name="Menu_Sub_CRs" xml:space="preserve">
    <value>CR's</value>
  </data>
  <data name="Menu_Sub_CR_Reports" xml:space="preserve">
    <value>CR Reports</value>
  </data>
  <data name="Menu_Sub_CR_Types" xml:space="preserve">
    <value>CR Types</value>
  </data>
  <data name="Menu_Sub_CR_Type_Categories" xml:space="preserve">
    <value>CR Type Categories</value>
  </data>
  <data name="Menu_Sub_CR_Type_Groups" xml:space="preserve">
    <value>CR Type Groups</value>
  </data>
  <data name="Menu_Sub_Department" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="Menu_Sub_Department_Section" xml:space="preserve">
    <value>Department Section</value>
  </data>
  <data name="Menu_Sub_Factory" xml:space="preserve">
    <value>Factory</value>
  </data>
  <data name="Menu_Sub_Factory_Type" xml:space="preserve">
    <value>Factory Type</value>
  </data>
  <data name="Menu_Sub_Mixer" xml:space="preserve">
    <value>Mixer</value>
  </data>
  <data name="Menu_Sub_Mixer_Type" xml:space="preserve">
    <value>Mixer Type</value>
  </data>
  <data name="Menu_Sub_Projects" xml:space="preserve">
    <value>Projects</value>
  </data>
  <data name="Menu_Sub_Project_Owner" xml:space="preserve">
    <value>Project Owner</value>
  </data>
  <data name="Menu_Sub_Project_Owner_Type" xml:space="preserve">
    <value>Project Owner Type</value>
  </data>
  <data name="Menu_Sub_RCV" xml:space="preserve">
    <value>RCV</value>
  </data>
  <data name="Menu_Sub_RCVMM_Conversation" xml:space="preserve">
    <value>RCV Missmatch Work-flow</value>
  </data>
  <data name="Menu_Sub_RCV_Missmatch" xml:space="preserve">
    <value>Miss-match Cases</value>
  </data>
  <data name="Menu_Sub_RCV_Reports" xml:space="preserve">
    <value>Reports</value>
  </data>
  <data name="Menu_Sub_Sample_Test" xml:space="preserve">
    <value>Sample Test</value>
  </data>
  <data name="Menu_Sub_Sample_test_Category" xml:space="preserve">
    <value>Sample test Category</value>
  </data>
  <data name="Menu_Sub_Users_Profile" xml:space="preserve">
    <value>Users Profile</value>
  </data>
  <data name="Menu_Sub_Users_Roles" xml:space="preserve">
    <value>User Roles</value>
  </data>
  <data name="Menu_Users_Management" xml:space="preserve">
    <value>Users Management</value>
  </data>
  <data name="Sub_AuthLab" xml:space="preserve">
    <value>Authorized Lab.</value>
  </data>
  <data name="Sub_CEO" xml:space="preserve">
    <value>CEO</value>
  </data>
  <data name="Sub_ConsultantEng" xml:space="preserve">
    <value>Consultant Engineer</value>
  </data>
  <data name="Sub_Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="Sub_CR_Assigned" xml:space="preserve">
    <value>Assigned CR's</value>
  </data>
  <data name="Sub_CR_Create" xml:space="preserve">
    <value>New CR</value>
  </data>
  <data name="Sub_CR_Pending" xml:space="preserve">
    <value>Pending CR's</value>
  </data>
  <data name="Sub_CR_Search" xml:space="preserve">
    <value>Search CR's</value>
  </data>
  <data name="Sub_CR_SearchProjectReport" xml:space="preserve">
    <value>Search Project CR's Report</value>
  </data>
  <data name="Sub_CR_SearchReport" xml:space="preserve">
    <value>Search CR's Report</value>
  </data>
  <data name="Sub_CR_SearchSamplesReport" xml:space="preserve">
    <value>Search CR Samples Report</value>
  </data>
  <data name="Sub_CR_SearchSamplesReport_Detailed" xml:space="preserve">
    <value>Search Project CR Samples Report</value>
  </data>
  <data name="Sub_ProjectSuperEng" xml:space="preserve">
    <value>Project Supervisor Engineer</value>
  </data>
  <data name="Sub_QualityEng" xml:space="preserve">
    <value>Quality Engineer</value>
  </data>
  <data name="Sub_RCVMM_Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Sub_RCV_PendingSearch" xml:space="preserve">
    <value>Pending RCV</value>
  </data>
  <data name="Sub_RCV_RandomSearch" xml:space="preserve">
    <value>Random Search</value>
  </data>
  <data name="Sub_RCV_Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Sub_Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Sub_SuperEng" xml:space="preserve">
    <value>Supervisor Engineer</value>
  </data>
  <data name="Sub_Technician" xml:space="preserve">
    <value>Technician</value>
  </data>
  <data name="Sub_ViewPending" xml:space="preserve">
    <value>View Pending</value>
  </data>
</root>